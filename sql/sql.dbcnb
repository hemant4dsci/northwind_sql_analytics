cells:
  - kind: 1
    languageId: markdown
    value: ">#### Sales & Revenue Insights"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q1: Which products and categories drive the most revenue, and how can
      this information guide sales and inventory strategies?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    revenue_by_product AS (\r

      \        SELECT\r

      \            prd.product_name,\r

      \            ctg.category_name,\r

      \            SUM(\r

      \                (odd.unit_price * odd.quantity) - (odd.unit_price *
      odd.quantity) * odd.discount\r

      \            ) AS total_revenue\r

      \        FROM\r

      \            public.products prd\r

      \            JOIN order_details odd ON (odd.product_id = prd.product_id)\r

      \            JOIN categories ctg ON (prd.category_id = ctg.category_id)\r

      \        GROUP BY\r

      \            prd.product_name,\r

      \            ctg.category_name\r

      \    )\r

      SELECT\r

      \    product_name AS product,\r

      \    category_name AS product_category,\r

      \    ROUND(total_revenue, 2) AS total_revenue,\r

      \    ROUND(\r

      \        total_revenue / SUM(total_revenue) OVER () * 100,\r

      \        2\r

      \    ) AS revenue_share\r

      FROM\r

      \    revenue_by_product\r

      ORDER BY\r

      \    total_revenue DESC;"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    revenue_by_category AS (\r

      \        SELECT\r

      \            ctg.category_name,\r

      \            SUM(\r

      \                (odd.unit_price * odd.quantity) - (odd.unit_price *
      odd.quantity) * odd.discount\r

      \            ) AS total_revenue\r

      \        FROM\r

      \            public.products prd\r

      \            JOIN order_details odd ON (odd.product_id = prd.product_id)\r

      \            JOIN categories ctg ON (prd.category_id = ctg.category_id)\r

      \        GROUP BY\r

      \            ctg.category_name\r

      \    )\r

      SELECT\r

      \    category_name AS product_category,\r

      \    ROUND(total_revenue, 2) AS total_revenue,\r

      \    ROUND(\r

      \        total_revenue / SUM(total_revenue) OVER () * 100,\r

      \        2\r

      \    ) AS revenue_share\r

      FROM\r

      \    revenue_by_category\r

      ORDER BY\r

      \    total_revenue DESC;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q2: Who are the top customers, and what portion of total sales do they
      represent?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    customer_spending AS (\r

      \        SELECT\r

      \            cst.company_name as customers,\r

      \            SUM(\r

      \                (odd.quantity * odd.unit_price) - (odd.quantity *
      odd.unit_price) * odd.discount\r

      \            ) AS total_spending\r

      \        FROM\r

      \            customers cst\r

      \            JOIN orders odr ON (odr.customer_id = cst.customer_id)\r

      \            JOIN order_details odd ON (odd.order_id = odr.order_id)\r

      \        GROUP BY\r

      \            cst.company_name\r

      \    ),\r

      \    top_customers AS (\r

      \        SELECT\r

      \            customers,\r

      \            ROUND(total_spending, 2) AS total_spending\r

      \        FROM\r

      \            customer_spending\r

      \        WHERE -- top cusomers\r

      \            total_spending >= (\r

      \                SELECT\r

      \                    PERCENTILE_CONT(0.75) WITHIN GROUP (\r

      \                        ORDER BY\r

      \                            total_spending\r

      \                    )\r

      \                FROM\r

      \                    customer_spending\r

      \            )\r

      \    )\r

      SELECT\r

      \    customers AS \"Customers\",\r

      \    total_spending AS \"Total Spending ($)\",\r

      \    ROUND(\r

      \        total_spending / SUM(total_spending) OVER () * 100,\r

      \        2\r

      \    ) AS \"Spending Share (%)\"\r

      FROM\r

      \    top_customers\r

      ORDER BY\r

      \    total_spending DESC;"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    customer_spending AS (\r

      \        SELECT\r

      \            cst.company_name AS customer,\r

      \            SUM(\r

      \                odd.quantity * odd.unit_price * (1 - odd.discount)\r

      \            ) AS total_spending\r

      \        FROM\r

      \            customers cst\r

      \            JOIN orders odr ON odr.customer_id = cst.customer_id\r

      \            JOIN order_details odd ON odd.order_id = odr.order_id\r

      \        GROUP BY\r

      \            cst.company_name\r

      \    ),\r

      \    customer_tiers AS (\r

      \        SELECT\r

      \            customer,\r

      \            total_spending,\r

      \            CASE\r

      \                WHEN CUME_DIST() OVER (\r

      \                    ORDER BY\r

      \                        total_spending\r

      \                ) > 0.75 THEN 'Top'\r

      \                WHEN CUME_DIST() OVER (\r

      \                    ORDER BY\r

      \                        total_spending\r

      \                ) > 0.25 THEN 'Mid'\r

      \                ELSE 'Low'\r

      \            END AS tier\r

      \        FROM\r

      \            customer_spending\r

      \    ),\r

      \    tier_summary AS (\r

      \        SELECT\r

      \            tier,\r

      \            COUNT(*) AS num_customers,\r

      \            SUM(total_spending) AS tier_total\r

      \        FROM\r

      \            customer_tiers\r

      \        GROUP BY\r

      \            tier\r

      \    ),\r

      \    total_company_revenue AS (\r

      \        SELECT\r

      \            SUM(total_spending) AS total_revenue\r

      \        FROM\r

      \            customer_spending\r

      \    )\r

      SELECT\r

      \    tier AS \"Customer Tier\",\r

      \    num_customers AS \"Number of Customers\",\r

      \    ROUND(tier_total, 2) AS \"Total Revenue ($)\",\r

      \    ROUND(tier_total / tcr.total_revenue * 100, 2) AS \"Revenue Share
      (%)\"\r

      FROM\r

      \    tier_summary ts\r

      \    CROSS JOIN total_company_revenue tcr\r

      ORDER BY\r

      \    CASE tier\r

      \        WHEN 'Top' THEN 1\r

      \        WHEN 'Mid' THEN 2\r

      \        ELSE 3\r

      \    END;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q3: Which regions or countries contribute the most to revenue, and how
      does their performance compare year-over-year?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    country_revenue AS (\r

      \        SELECT\r

      \            odr.ship_country AS countries,\r

      \            EXTRACT(\r

      \                YEAR\r

      \                FROM\r

      \                    odr.order_date\r

      \            ) AS order_year,\r

      \            ROUND(\r

      \                SUM(\r

      \                    (odd.unit_price * odd.quantity) - (odd.unit_price *
      odd.quantity) * odd.discount\r

      \                ),\r

      \                2\r

      \            ) AS total_revenue\r

      \        FROM\r

      \            order_details odd\r

      \            JOIN orders odr ON (odd.order_id = odr.order_id)\r

      \        GROUP BY\r

      \            countries,\r

      \            order_year\r

      \        ORDER BY\r

      \            order_year,\r

      \            total_revenue\r

      \    ),\r

      \    revenue_yoy AS (\r

      \        SELECT\r

      \            countries,\r

      \            SUM(\r

      \                CASE\r

      \                    WHEN order_year = 1996 THEN total_revenue\r

      \                    ELSE 0\r

      \                END\r

      \            ) AS revenue_1996,\r

      \            SUM(\r

      \                CASE\r

      \                    WHEN order_year = 1997 THEN total_revenue\r

      \                    ELSE 0\r

      \                END\r

      \            ) AS revenue_1997,\r

      \            SUM(\r

      \                CASE\r

      \                    WHEN order_year = 1998 THEN total_revenue\r

      \                    ELSE 0\r

      \                END\r

      \            ) AS revenue_1998\r

      \        FROM\r

      \            country_revenue\r

      \        GROUP BY\r

      \            countries\r

      \    )\r

      SELECT\r

      \    countries,\r

      \    revenue_1996,\r

      \    revenue_1997,\r

      \    revenue_1998,\r

      \    CASE\r

      \        WHEN revenue_1996 = 0 THEN 0\r

      \        ELSE ROUND(\r

      \            (revenue_1997 - revenue_1996) / revenue_1996 * 100,\r

      \            2\r

      \        )\r

      \    END AS yoy_1997vs1996,\r

      \    CASE\r

      \        WHEN revenue_1997 = 0 THEN 0\r

      \        ELSE ROUND(\r

      \            (revenue_1998 - revenue_1997) / revenue_1997 * 100,\r

      \            2\r

      \        )\r

      \    END AS yoy_1998vs1997\r

      FROM\r

      \    revenue_yoy\r

      ORDER BY\r

      \    revenue_1996 DESC,\r

      \    revenue_1997 DESC,\r

      \    revenue_1998 DESC;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q4: What percentage of revenue comes from repeat customers versus new
      customers?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    first_order AS (\r

      \        SELECT\r

      \            customer_id,\r

      \            MIN(order_date) AS first_order_date\r

      \        FROM\r

      \            orders\r

      \        GROUP BY\r

      \            customer_id\r

      \    ),\r

      \    customer_revenue AS (\r

      \        SELECT\r

      \            odr.customer_id,\r

      \            SUM(\r

      \                (odd.unit_price * odd.quantity) - (odd.unit_price *
      odd.quantity) * odd.discount\r

      \            ) AS total_revenue,\r

      \            CASE\r

      \                WHEN odr.order_date = fod.first_order_date THEN 'New
      Customer'\r

      \                ELSE 'Repeat Customer'\r

      \            END AS customer_type\r

      \        FROM\r

      \            orders odr\r

      \            JOIN order_details odd ON (odd.order_id = odr.order_id)\r

      \            JOIN first_order fod ON (fod.customer_id = odr.customer_id)\r

      \        GROUP BY\r

      \            odr.customer_id,\r

      \            customer_type\r

      \    ),\r

      \    customer_type_revenue AS (\r

      \        SELECT\r

      \            customer_type,\r

      \            SUM(total_revenue) AS total_revenue\r

      \        FROM\r

      \            customer_revenue\r

      \        GROUP BY\r

      \            customer_type\r

      \    )\r

      SELECT\r

      \    customer_type,\r

      \    total_revenue,\r

      \    ROUND(\r

      \        (total_revenue / SUM(total_revenue) OVER ()) * 100,\r

      \        2\r

      \    ) AS revenue_percentage\r

      FROM\r

      \    customer_type_revenue;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: ">#### Product & Inventory Performence"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q5: Which pairs or groups of products tend to be bought together based
      on order data?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    first_products AS (\r

      \        SELECT\r

      \            odd.order_id,\r

      \            prd.product_name\r

      \        FROM\r

      \            order_details odd\r

      \            JOIN products prd ON (odd.product_id = prd.product_id)\r

      \    ),\r

      \    second_products AS (\r

      \        SELECT\r

      \            odd.order_id,\r

      \            prd.product_name\r

      \        FROM\r

      \            order_details odd\r

      \            JOIN products prd ON (odd.product_id = prd.product_id)\r

      \    )\r

      SELECT\r

      \    fpd.product_name AS product_one,\r

      \    spd.product_name AS product_two,\r

      \    COUNT(*) AS times_order_together\r

      FROM\r

      \    first_products fpd\r

      \    JOIN second_products spd ON fpd.order_id = spd.order_id\r

      \    AND fpd.product_name < spd.product_name\r

      GROUP BY\r

      \    fpd.product_name,\r

      \    spd.product_name\r

      ORDER BY\r

      \    times_order_together DESC\r

      LIMIT\r

      \    10;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q6: Which items show poor sales performance relative to their inventory
      quantity?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    sales_data AS (\r

      \        SELECT\r

      \            product_id,\r

      \            SUM(\r

      \                (unit_price * quantity) - (unit_price * quantity) *
      discount\r

      \            ) AS total_revenue\r

      \        FROM\r

      \            order_details\r

      \        GROUP BY\r

      \            product_id\r

      \    ),\r

      \    inventory_data AS (\r

      \        SELECT\r

      \            product_id,\r

      \            product_name,\r

      \            units_in_stock\r

      \        FROM\r

      \            products -- or products table with inventory info\r

      \    )\r

      SELECT\r

      \    inv.product_id,\r

      \    inv.product_name,\r

      \    inv.units_in_stock,\r

      \    sls.total_revenue\r

      FROM\r

      \    inventory_data inv\r

      \    JOIN sales_data sls ON inv.product_id = sls.product_id\r

      ORDER BY\r

      \    inv.units_in_stock DESC,\r

      \    total_revenue\r

      LIMIT\r

      \    10;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q7: What is the average order size across product categories, and which
      categories dominate bulk orders?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    category_order_size AS (\r

      \        SELECT\r

      \            odd.order_id,\r

      \            ctg.category_name,\r

      \            SUM(odd.quantity) AS quantity_per_order\r

      \        FROM\r

      \            order_details odd\r

      \            JOIN products pdt ON odd.product_id = pdt.product_id\r

      \            JOIN categories ctg ON ctg.category_id = pdt.category_id\r

      \        GROUP BY\r

      \            odd.order_id,\r

      \            ctg.category_name\r

      \    ),\r

      \    category_bulk_order AS (\r

      \        SELECT\r

      \            category_name,\r

      \            ROUND(AVG(quantity_per_order), 2) AS average_order_size,\r

      \            COUNT(\r

      \                CASE\r

      \                    WHEN quantity_per_order > 20 THEN 1\r

      \                    ELSE 0\r

      \                END\r

      \            ) AS bulk_order_count -- above 20 qty count as bulk order\r

      \        FROM\r

      \            category_order_size\r

      \        GROUP BY\r

      \            category_name\r

      \    )\r

      SELECT\r

      \    category_name,\r

      \    average_order_size,\r

      \    bulk_order_count\r

      FROM\r

      \    category_bulk_order\r

      ORDER BY\r

      \    bulk_order_count DESC;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q8: Which suppliers provide the most profitable products to the company?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    supplier_classified AS (\r

      \        SELECT\r

      \            spl.company_name AS supplier,\r

      \            ROUND(SUM(prd.unit_price * odd.quantity), 2) AS total_cost,\r

      \            ROUND(SUM(odd.unit_price * odd.quantity), 2) AS
      total_sales,\r

      \            ROUND(\r

      \                SUM((odd.unit_price * odd.quantity) * odd.discount),\r

      \                2\r

      \            ) AS discount_amount\r

      \        FROM\r

      \            order_details odd\r

      \            JOIN products prd ON (odd.product_id = prd.product_id)\r

      \            JOIN suppliers spl ON (spl.supplier_id = prd.supplier_id)\r

      \        GROUP BY\r

      \            spl.company_name\r

      \    )\r

      SELECT\r

      \    supplier,\r

      \    ((total_sales - total_cost) - discount_amount) as net_profit\r

      FROM\r

      \    supplier_classified\r

      ORDER BY\r

      \    net_profit DESC\r

      LIMIT\r

      \    10;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: ">#### Customer & Order Behaviour"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q9: What is the average time gap between successive orders from the same
      customer?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    order_frequency AS (\r

      \        SELECT\r

      \            cst.company_name AS customer_name,\r

      \            odr.order_date,\r

      \            COALESCE(\r

      \                odr.order_date - LAG(odr.order_date) OVER (\r

      \                    PARTITION BY\r

      \                        cst.company_name\r

      \                    ORDER BY\r

      \                        odr.order_date\r

      \                ),\r

      \                0\r

      \            ) AS days_frequency\r

      \        FROM\r

      \            orders odr\r

      \            JOIN customers cst ON odr.customer_id = cst.customer_id\r

      \    )\r

      SELECT\r

      \    customer_name,\r

      \    ROUND(AVG(days_frequency), 2) AS avg_order_days_frequency\r

      FROM\r

      \    order_frequency\r

      GROUP BY\r

      \    customer_name\r

      ORDER BY\r

      \    avg_order_days_frequency DESC\r

      LIMIT\r

      \    10;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q10: Which customers have the longest relationships with the company,
      and what is their lifetime value?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    customer_relation AS (\r

      \        SELECT\r

      \            cst.company_name AS customer,\r

      \            MIN(odr.order_date) AS first_order,\r

      \            MAX(odr.order_date) AS recent_order,\r

      \            SUM(odd.unit_price * odd.quantity) AS life_time_value\r

      \        FROM\r

      \            order_details odd\r

      \            JOIN orders odr ON odr.order_id = odd.order_id\r

      \            JOIN customers cst ON cst.customer_id = odr.customer_id\r

      \        GROUP BY\r

      \            customer\r

      \    )\r

      SELECT\r

      \    customer,\r

      \    (recent_order - first_order) AS relation_period,\r

      \    life_time_value\r

      FROM\r

      \    customer_relation\r

      ORDER BY\r

      \    relation_period DESC,\r

      \    life_time_value DESC\r

      LIMIT\r

      \    10;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q11: Which shipping method is most cost-effective based on average order
      value and delivery frequency?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    order_total AS (\r

      \        SELECT\r

      \            odr.order_id,\r

      \            odr.ship_via AS shipper_id,\r

      \            CASE\r

      \                WHEN odr.shipped_date ISNULL THEN 0\r

      \                ELSE odr.shipped_date - odr.order_date\r

      \            END AS delivery_duration,\r

      \            odr.freight AS shipping_charges,\r

      \            SUM(\r

      \                odd.unit_price * odd.quantity * (1 - odd.discount)\r

      \            ) AS order_total\r

      \        FROM\r

      \            orders odr\r

      \            JOIN order_details odd ON odd.order_id = odr.order_id\r

      \        GROUP BY\r

      \            odr.order_id,\r

      \            odr.ship_via\r

      \    ),\r

      \    shippers_stats AS (\r

      \        SELECT\r

      \            spr.company_name AS shipping_company,\r

      \            COUNT(odt.order_id) AS delivery_frequency,\r

      \            ROUND(AVG(odt.delivery_duration), 2) AS delivery_duration,\r

      \            ROUND(AVG(odt.shipping_charges), 2) AS shipping_charges,\r

      \            ROUND(AVG(odt.order_total), 2) AS average_order_value,\r

      \            ROUND(AVG(odt.order_total) / COUNT(odt.order_id), 2) AS
      cost_effectiveness\r

      \        FROM\r

      \            shippers spr\r

      \            JOIN order_total odt ON odt.shipper_id = spr.shipper_id\r

      \        GROUP BY\r

      \            shipping_company\r

      \    )\r

      SELECT\r

      \    shipping_company,\r

      \    delivery_duration,\r

      \    shipping_charges,\r

      \    cost_effectiveness\r

      FROM\r

      \    shippers_stats;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: ">#### Operational Efficiency"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q12: Which sales representatives generate the highest revenue, and how
      does their performance vary across different regions?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    employee_revenue AS (\r

      \        SELECT\r

      \            odr.employee_id,\r

      \            CONCAT(emp.first_name, ' ', emp.last_name) AS
      employee_name,\r

      \            rgn.region_description AS regions,\r

      \            ROUND(\r

      \                SUM(\r

      \                    odd.unit_price * odd.quantity * (1 - odd.discount)\r

      \                ),\r

      \                2\r

      \            ) AS net_revenue\r

      \        FROM\r

      \            order_details odd\r

      \            JOIN orders odr ON odr.order_id = odd.order_id\r

      \            JOIN employees emp ON odr.employee_id = emp.employee_id\r

      \            JOIN employee_territories etr ON etr.employee_id =
      emp.employee_id\r

      \            JOIN territories trt ON trt.territory_id = etr.territory_id\r

      \            JOIN region rgn ON rgn.region_id = trt.region_id\r

      \        WHERE\r

      \            emp.title = 'Sales Representative'\r

      \        GROUP BY\r

      \            odr.employee_id,\r

      \            employee_name,\r

      \            regions\r

      \    )\r

      SELECT\r

      \    employee_name,\r

      \    regions,\r

      \    net_revenue,\r

      \    ROUND((net_revenue / SUM(net_revenue) OVER () * 100), 2) AS
      revenue_share\r

      FROM\r

      \    employee_revenue\r

      ORDER BY\r

      \    net_revenue DESC,\r

      \    regions;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q13: How does the average order size and frequency vary among sales
      representatives?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    order_size AS (\r

      \        SELECT\r

      \            odr.order_id,\r

      \            odr.employee_id,\r

      \            ROUND(\r

      \                SUM(\r

      \                    odd.unit_price * odd.quantity * (1 - odd.discount)\r

      \                ),\r

      \                2\r

      \            ) AS order_total\r

      \        FROM\r

      \            order_details odd\r

      \            JOIN orders odr ON odr.order_id = odd.order_id\r

      \        GROUP BY\r

      \            odr.order_id\r

      \    ),\r

      \    employee_order_stats AS (\r

      \        SELECT\r

      \            CONCAT(emp.first_name, ' ', emp.last_name) AS
      employee_name,\r

      \            COUNT(ods.order_id) AS order_frequency,\r

      \            ROUND(AVG(ods.order_total), 2) AS average_order_size\r

      \        FROM\r

      \            employees emp\r

      \            JOIN order_size ods ON ods.employee_id = emp.employee_id\r

      \        WHERE\r

      \            emp.title = 'Sales Representative'\r

      \        GROUP BY\r

      \            employee_name\r

      \    )\r

      SELECT\r

      \    employee_name,\r

      \    order_frequency,\r

      \    average_order_size\r

      FROM\r

      \    employee_order_stats;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q14: Which employees are responsible for managing the most valuable
      customers according to order value?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    customer_order_total AS (\r

      \        SELECT\r

      \            odr.customer_id,\r

      \            SUM(\r

      \                odd.unit_price * odd.quantity * (1 - odd.discount)\r

      \            ) AS total_customer_value\r

      \        FROM\r

      \            order_details odd\r

      \            JOIN orders odr ON odr.order_id = odd.order_id\r

      \        GROUP BY\r

      \            odr.customer_id\r

      \    ),\r

      \    high_value_customer AS (\r

      \        SELECT\r

      \            customer_id,\r

      \            total_customer_value\r

      \        FROM\r

      \            customer_order_total\r

      \        WHERE\r

      \            total_customer_value >= (\r

      \                SELECT\r

      \                    PERCENTILE_CONT(0.75) WITHIN GROUP (\r

      \                        ORDER BY\r

      \                            total_customer_value\r

      \                    )\r

      \                FROM\r

      \                    customer_order_total\r

      \            ) -- top 25% in order value\r

      \    ),\r

      \    employee_high_value_customers AS (\r

      \        SELECT\r

      \            emp.employee_id,\r

      \            CONCAT(emp.first_name, ' ', emp.last_name) AS
      employee_name,\r

      \            COUNT(DISTINCT hvc.customer_id) AS
      high_value_customer_count\r

      \        FROM\r

      \            high_value_customer hvc\r

      \            JOIN orders odr ON odr.customer_id = hvc.customer_id\r

      \            JOIN employees emp ON emp.employee_id = odr.employee_id\r

      \        GROUP BY\r

      \            emp.employee_id,\r

      \            employee_name\r

      \    )\r

      SELECT\r

      \    employee_name,\r

      \    high_value_customer_count\r

      FROM\r

      \    employee_high_value_customers\r

      ORDER BY\r

      \    high_value_customer_count DESC;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: ">#### Operational Efficiency"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q15: What is the average order fulfillment time, and which shipping
      providers perform best?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    order_fulfillment_time AS (\r

      \        SELECT\r

      \            order_id,\r

      \            ship_via,\r

      \            CASE\r

      \                WHEN shipped_date ISNULL THEN 0\r

      \                ELSE shipped_date - order_date\r

      \            END AS fulfillment_time\r

      \        FROM\r

      \            orders\r

      \    )\r

      SELECT\r

      \    spr.company_name AS shipping_company,\r

      \    COUNT(oft.order_id) AS order_count,\r

      \    ROUND(AVG(fulfillment_time), 2) AS average_fulfillment_time\r

      FROM\r

      \    shippers spr\r

      \    JOIN order_fulfillment_time oft ON spr.shipper_id = oft.ship_via\r

      GROUP BY\r

      \    shipping_company;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q16: Do customer orders exhibit seasonal fluctuations, such as increased
      activity in certain quarters?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    quarterly_revenue AS (\r

      \        SELECT\r

      \            EXTRACT(\r

      \                YEAR\r

      \                FROM\r

      \                    odr.order_date\r

      \            ) AS order_year,\r

      \            EXTRACT(\r

      \                QUARTER\r

      \                FROM\r

      \                    odr.order_date\r

      \            ) AS order_qtr,\r

      \            SUM(\r

      \                odd.unit_price * odd.quantity * (1 - odd.discount)\r

      \            ) AS customer_orders\r

      \        FROM\r

      \            orders odr\r

      \            JOIN order_details odd ON (odd.order_id = odr.order_id)\r

      \        GROUP BY\r

      \            order_year,\r

      \            order_qtr\r

      \    )\r

      SELECT\r

      \    order_year,\r

      \    order_qtr,\r

      \    ROUND(AVG(customer_orders), 2) AS average_qtr_revenue\r

      FROM\r

      \    quarterly_revenue\r

      GROUP BY\r

      \    order_year,\r

      \    order_qtr\r

      ORDER BY\r

      \    order_year,\r

      \    order_qtr;"
    metadata: {}
  - kind: 1
    languageId: markdown
    value: "Q17: Which product categories show the highest return on investment when
      comparing cost vs. sales revenue?"
    metadata: {}
  - kind: 2
    languageId: sql
    value: "WITH\r

      \    categories_cost_revenue AS (\r

      \        SELECT\r

      \            ctg.category_id,\r

      \            ctg.category_name,\r

      \            SUM(odd.quantity * prd.unit_price) AS total_cost,\r

      \            ROUND(\r

      \                SUM(\r

      \                    odd.unit_price * odd.quantity * (1 - odd.discount)\r

      \                ),\r

      \                2\r

      \            ) AS net_revenue\r

      \        FROM\r

      \            order_details odd\r

      \            JOIN products prd ON prd.product_id = odd.product_id\r

      \            JOIN categories ctg ON ctg.category_id = prd.category_id\r

      \        GROUP BY\r

      \            ctg.category_id,\r

      \            ctg.category_name\r

      \    )\r

      SELECT\r

      \    category_name,\r

      \    total_cost,\r

      \    net_revenue,\r

      \    ROUND(\r

      \        ((net_revenue - total_cost) / total_cost) * 100,\r

      \        2\r

      \    ) AS category_roi\r

      FROM\r

      \    categories_cost_revenue\r

      ORDER BY\r

      \    category_roi DESC;"
    metadata: {}
metadata:
  conn:
    id: rJytbKygSPpeLsu8Z2uMc
    name: PostgreSQL
  database: northwind_traders
  schema: public
